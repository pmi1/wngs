<?php

namespace AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\CmfRights;

/**
 * CmfRightsRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CmfRightsRepository extends EntityRepository
{
    /**
     * Проверка привилегии по урлу и хэшу групп ролей пользователя
     *
     * @param string $url урл
     * @param string $hash хэш групп ролей
     * @param string $privilege привилегия
     *
     * @return bool
     */
    public function isGranted($url, $hash, $privilege)
    {
        $isGranted = false;
        
        $sql = "SELECT *
                FROM cmf_rights cr
                INNER JOIN cmf_script cs ON cr.script_id = cs.id
                WHERE cr.cmf_role_group_combination_id = :hash 
                    AND cs.url = :url 
                    AND cs.real_status = 1
                    AND cs.deleted_at IS NULL";
        
        $statement = $this->_em->getConnection()->prepare($sql);
        $statement->bindValue('hash', $hash);
        $statement->bindValue('url', $url);
        $statement->execute();
        
        $row = $statement->fetch();
        
        if (isset($row[$privilege]) && $row[$privilege]) {
            $isGranted = true;
        }
        
        return $isGranted;
    }
    
    /**
     * Получить список всех ролей и активных разделов, к которым есть доступ на чтение
     *
     * @return array
     */
    public function getActiveRolesWithSections()
    {
        $sql = 'SELECT p.roles_group_id, cs.url, cs.realcatname
                FROM cmf_script cs
                LEFT JOIN role_script rs ON cs.id = rs.cmf_script_id
                LEFT JOIN privilege p ON p.role_id = rs.role_id
                WHERE p.is_read = 1 
                    AND real_status = 1 
                    AND is_group_node = 0 ';
        
        if ($this->_em->getFilters()->isEnabled('softdeleteable')) {
            $sql .= ' AND cs.deleted_at IS NULL ';
        }
        
        $sql .= ' GROUP BY cs.id, roles_group_id
                ORDER BY cs.url DESC, cs.realcatname DESC';
        
        $statement = $this->_em->getConnection()->prepare($sql);
        $statement->execute();

        return $statement->fetchAll();
    }
    
    /**
     * Очистить таблицу прав
     *
     * @return void
     */
    public function cleanRightsTable()
    {
        $sql = 'TRUNCATE TABLE cmf_rights';
        $statement = $this->_em->getConnection()->prepare($sql);
        $statement->execute();
    }
}
